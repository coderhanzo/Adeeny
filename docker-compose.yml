# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose

services:
  djangobackend:
    container_name: djangobackend
    build: 
      context: ./ADEENY
    command: python -m gunicorn config.asgi:application -k uvicorn.workers.UvicornWorker
    volumes:
      - ./ADEENY:/usr/src/app
    port:
      - 8000:8000

    environment:
      - postgresql://postgres:postgres@localhost:5432/adeenydb
    env_file:
      - .env

    depends_on:
      db:
        condition: service_healthy

    develop:
      watch:
        - action: rebuild
          path: .

  db:
    image: postgres
    restart: always
    user: postgres
    # secrets:
    #   - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    
    container_name: Adeeny_postgresdb
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "postgres_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: .env

